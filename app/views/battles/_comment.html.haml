.row
  %div{class: "small-12 large-#{12-depth} large-offset-#{depth} color-#{index} columns comment"}
    .row
      .large-2.columns.user-section
        = image_tag(comment.user.avatar_url, class: "avatar")
        %br
        %strong= comment.user.full_name
      .large-10.columns
        .comment-text{ "id" => "comment-#{comment.id}"}= text_with_images comment.body
        = form_for(Comment.find(comment.id), html: {id: "edit-comment-#{comment.id}", class: "edit-comment-form"}) do |f|
          = f.text_field :body
          = f.hidden_field :id, value: comment.id
        %div= comment.tags.map { |tag| "\##{tag.name}" }.join(", ")
    .row.buttons
      .large-offset-2.large-10.columns
        - unless battle.won?
          %button.button.edit-comment{ :"data-edit-comment-id" => "#{comment.id}"} Edit
          %button.button.add-tag{ :"data-comment-id" => "#{comment.id}"} Tag
          %button.button.add-reply{ :"data-comment-id" => "#{comment.id}"} Reply
          - if battle.created_by_id == current_user.id
            = form_for battle, html: {class: "winner-form"} do |f|
              = f.hidden_field :winning_comment_id, value: comment.id
              = f.submit "Mark as winner", class: "button"
        = form_for(Tag.new, html: {id: "new-tag-#{comment.id}", class: "new-tag"}) do |f|
          = f.text_field :name
          = f.hidden_field :comment_id, value: comment.id
        = form_for(Comment.new, html: {id: "new-reply-#{comment.id}", class: "new-reply"}) do |f|
          = f.text_field :body
          = f.hidden_field :comment_id, value: comment.id
          = f.hidden_field :battle_id, value: battle.id
          = f.submit

- depth += 1 unless depth >= 5
- comment.comments.each_with_index do |reply, i|
  = render partial: "comment", locals:{comment:reply, battle:battle, depth:depth, index:(index+i+1)%2}
